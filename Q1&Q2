Q1
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/stat.h>
void
mk_token(char *s, char *tok[])
{
int i = 0;
char *p;
p = strtok(s, " ");
while (p != NULL)
{
tok[i++] = p;
p = strtok(NULL, " ");
}
tok[i] = NULL;
}
void count(char *fn, char op)
{
int fh, cc = 0, wc = 0, lc = 0;
char c;
fh = open(fn, O_RDONLY);
if (fh == -1)
{
printf("File %s is Not Found!!\n", fn);
return;
}
while (read(fh, &c, 1) > 0)
{
if (c == ' ')
wc++;
else if (c == '\n')
{
wc++;
lc++;
}
cc++;
}
close(fh);
switch (op)
{
case 'c':
printf("No. of characters = %d\n", cc);
break;
case 'w':
printf("No. of words = %d\n", wc);
break;
case 'l':
printf("No. of lines = %d\n", lc);
break;
default:
printf("Bad Command!!");
break;
}
}
int main()
{
int pid;
char ch;
char buff[80], *args[10];
printf("myshell$ ");
fflush(stdin);
fgets(buff, 80, stdin);
buff[strlen(buff) - 1] = '\0';
mk_token(buff, args);
if (strcmp(args[0], "count") == 0)
count(args[2], args[1][0]);

else
{
if (execvp(args[0], args) == -1)
printf("Command Not Found!!\nPlease Enter Proper Command\n");
}
return 0;
}





Q2.
#include <stdio.h>
void
main()
{
int p[10], pr[10], at[10], bt[10], st[10], ft[10], wt[10], tt[10], n, i, j, temp = 0, bsum = 0;
float awt = 0, att = 0;
printf("*** Process Schedular using Priority ***\n");
printf("How many process : ");
scanf("%d", &n);
printf("\nEnter details of each process....\n");
for (i = 0; i < n; i++)
{
printf("\nProcess %d :", i + 1);
p[i] = i + 1;
printf("\n\tarrival = ");
scanf("%d", &at[i]);
printf("\tburst = ");
scanf("%d", &bt[i]);
printf("\tpriority = ");
scanf("%d", &pr[i]);
}
for (i = 0; i < n; i++)
for (j = 0; j < (n - 1); j++)
{
if (at[j] > at[j + 1])
{
temp = p[j];
p[j] = p[j + 1];
p[j + 1] = temp;
temp = at[j];
at[j] = at[j + 1];
at[j + 1] = temp;
temp = bt[j];
bt[j] = bt[j + 1];
bt[j + 1] = temp;
temp = pr[j];
pr[j] = pr[j + 1];
pr[j + 1] = temp;
}
}
for (i = 1; i < n; i++)
for (j = 1; j < (n - 1); j++)
{
if (pr[j] > pr[j + 1])
{
temp = p[j];
p[j] = p[j + 1];
p[j + 1] = temp;
temp = at[j];
at[j] = at[j + 1];
at[j + 1] = temp;
temp = bt[j];
bt[j] = bt[j + 1];
bt[j + 1] = temp;
temp = pr[j];
pr[j] = pr[j + 1];
pr[j + 1] = temp;
}
}
bsum = bt[0];
for (i = 1; i < n; i++)
{
for (j = i; j < (n - 1); j++)
{
if (at[j] <= bsum)
{
if (i == j)
break;
else if (i == j + 1)
{
temp = p[j];
p[j] = p[i];
p[i] = temp;
temp = at[j];
at[j] = at[i];
at[i] = temp;
temp = bt[j];
bt[j] = bt[i];
bt[i] = temp;
temp = pr[j];
pr[j] = pr[i];
pr[i] = temp;
break;
}
else
{
while (j != i)
{
temp = p[j];
p[j] = p[j - 1];
p[j - 1] = temp;
temp = at[j];
at[j] = at[j - 1];
at[j - 1] = temp;
temp = bt[j];
bt[j] = bt[j - 1];
bt[j - 1] = temp;
temp = pr[j];
pr[j] = pr[j - 1];
pr[j - 1] = temp;
j--;
}
break;
}
}
}
bsum = bsum + bt[i];
}
st[0] = at[0];
ft[0] = st[0] + bt[0];
for (i = 1; i < n; i++)
{
st[i] = st[i - 1] + bt[i - 1];
ft[i] = st[i] + bt[i];
}
for (i = 0; i < n; i++)
{
wt[i] = st[i] - at[i];
tt[i] = wt[i] + bt[i];
}
for (i = 0; i < n; i++)
{
awt = awt + wt[i];
att = att + tt[i];
}
awt = awt / n;
att = att / n;
printf("\n*** Table ***\n");
printf("\tProcess\tAT\tBT\tST\tFT\tWT\tTT\n");
for (i = 0; i < n; i++)
{
printf("\tP%d\t%d\t%d\t%d\t%d\t%d\t%d\n",
p[i], at[i], bt[i], st[i], ft[i], wt[i], tt[i]);
}
printf("\n");
printf("\nAverage Waiting Time = %.2f", awt);
printf("\nAverage Turnaround Time = %.2f", att);
printf("\n");
}
